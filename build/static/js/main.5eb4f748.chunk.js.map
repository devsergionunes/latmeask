{"version":3,"sources":["services/firebase.js","contexts/AuthContext.js","hooks/useAuth.js","assests/images/illustration.svg","assests/images/logo.svg","assests/images/google-icon.svg","components/button/Button.js","pages/Home.js","pages/NewRoom.js","assests/images/copy.svg","components/RoomCode/RoomCode.js","components/Questions/Questions.js","hooks/useRoom.js","pages/Room.js","assests/images/delete.svg","assests/images/check.svg","assests/images/answer.svg","pages/AdminRoom.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","React","createContext","AuthContextProvider","props","useState","user","setUser","a","provader","GoogleAuthProvider","signInWithPopup","response","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","Button","outlined","className","Home","history","useHistory","roomCode","setRoomCode","push","event","preventDefault","trim","ref","get","roomRef","exists","window","alert","val","endeAt","src","bgImg","alt","logoImg","onClick","googleIcon","onSubmit","type","placeholder","onChange","target","NewRoom","newRoom","setNewRoom","title","authorId","firebaseRoom","key","to","RoomCode","code","navigator","clipboard","writeText","copyImg","Questions","content","author","isAnswered","isHighlighted","useRoom","roomid","questions","setQuestions","setTitle","on","room","databaseQuestions","parsedQuestions","Object","entries","map","likeCount","values","likes","length","likeId","find","off","Room","newQuestion","setNewQuestion","roomId","useParams","question","questionId","remove","disabled","aria-label","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","confirm","update","Date","handleCheckQuestionAnswer","checkImg","handleHighlightQuestion","answerImg","handleDeleteQuestion","deleteImg","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5eb4f748.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport { firebase, auth, database };\r\n","import React from 'react';\r\nimport { firebase, auth } from '../services/firebase';\r\nexport const AuthContext = React.createContext({});\r\n\r\nexport function AuthContextProvider(props) {\r\n  const [user, setUser] = React.useState();\r\n\r\n  async function signInWithGoogle() {\r\n    const provader = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const response = await auth.signInWithPopup(provader);\r\n    if (response.user) {\r\n      const { displayName, photoURL, uid } = response.user;\r\n      if (!displayName || !photoURL) {\r\n        throw new Error('Missing Information from Google Account.');\r\n      }\r\n\r\n      setUser({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL,\r\n      });\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user;\r\n        if (!displayName || !photoURL) {\r\n          throw new Error('Missing Information from Google Account.');\r\n        }\r\n\r\n        setUser({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL,\r\n        });\r\n      }\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n  return (\r\n    <AuthContext.Provider value={{ user, signInWithGoogle }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import React from 'react';\r\nimport './button.css';\r\n\r\nexport function Button({ outlined,...props}) {\r\n  return <button className={`button ${outlined ? 'outlined': ''}`} {...props}></button>;\r\n}\r\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { database } from '../services/firebase';\nimport { useAuth } from '../hooks/useAuth';\nimport bgImg from '../assests/images/illustration.svg';\nimport logoImg from '../assests/images/logo.svg';\nimport googleIcon from '../assests/images/google-icon.svg';\nimport '../styles/auth.css';\nimport { Button } from '../components/button/Button';\nexport function Home() {\n  const { user, signInWithGoogle } = useAuth();\n  const history = useHistory();\n  const [roomCode, setRoomCode] = React.useState('');\n  async function hendleCreateRoom() {\n    if (!user) {\n      await signInWithGoogle();\n    }\n    history.push('/rooms/new');\n  }\n  async function hendalJoinRoom(event) {\n    event.preventDefault();\n    if (roomCode.trim() === '') return;\n\n    const roomRef = await database.ref(`rooms/${roomCode}`).get();\n\n    if (!roomRef.exists()) {\n      window.alert('Sala nao existe');\n      return;\n    }\n    if (roomRef.val().endeAt) {\n      alert('sala encerrada.');\n      return;\n    }\n\n    history.push(`rooms/${roomCode}`);\n  }\n  return (\n    <div id=\"page-auth\">\n      <aside>\n        <img src={bgImg} alt=\"\" />\n        <strong>Crie salas de Q&amp;A ao vivo</strong>\n        <p>Tires as duvidas da sua audiencia em tempo-real</p>\n      </aside>\n      <main>\n        <div className=\"main-content\">\n          <img src={logoImg} alt=\"letmeask\" />\n          <button className=\"create-room\" onClick={hendleCreateRoom}>\n            <img src={googleIcon} alt=\"logo do google\" />\n            Crie sua sala com o google\n          </button>\n          <div className=\"separator\">ou entre em uma sala</div>\n          <form onSubmit={hendalJoinRoom}>\n            <input\n              type=\"text\"\n              placeholder=\"Digite o codigo da sala\"\n              onChange={({ target }) => setRoomCode(target.value)}\n              value={roomCode}\n            />\n            <Button type=\"text\">Entrar na sala</Button>\n          </form>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { database } from '../services/firebase';\r\nimport bgImg from '../assests/images/illustration.svg';\r\nimport logoImg from '../assests/images/logo.svg';\r\nimport '../styles/auth.css';\r\nimport { Button } from '../components/button/Button';\r\nexport function NewRoom() {\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [newRoom, setNewRoom] = React.useState('');\r\n\r\n  async function hendalCreateRoom(event) {\r\n    event.preventDefault();\r\n    if (newRoom.trim() === '') {\r\n      return;\r\n    }\r\n    const roomRef = database.ref('rooms');\r\n\r\n    const firebaseRoom = await roomRef.push({\r\n      title: newRoom,\r\n      authorId: user.id,\r\n    });\r\n    history.push(`/admin/rooms/${firebaseRoom.key}`);\r\n  }\r\n  return (\r\n    <div id=\"page-auth\">\r\n      <aside>\r\n        <img src={bgImg} alt=\"\" />\r\n        <strong>Crie salas de Q&amp;A ao vivo</strong>\r\n        <p>Tires as duvidas da sua audiencia em tempo-real</p>\r\n      </aside>\r\n      <main>\r\n        <div className=\"main-content\">\r\n          <img src={logoImg} alt=\"letmeask\" />\r\n          <h2>Criar uma nova sala</h2>\r\n          <form onSubmit={hendalCreateRoom}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nome da sala\"\r\n              onChange={({ target }) => setNewRoom(target.value)}\r\n              value={newRoom}\r\n            />\r\n            <Button type=\"text\">Criar sala</Button>\r\n          </form>\r\n          <p>\r\n            Quer entrar em uma sala existente? <Link to=\"/\">Clique aqui</Link>\r\n          </p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","import './roomCode.css';\r\nimport copyImg from '../../assests/images/copy.svg';\r\n\r\nexport function RoomCode({ code }) {\r\n  function copyRoomCodeToClipBoard() {\r\n    navigator.clipboard.writeText(code);\r\n  }\r\n  return (\r\n    <button className=\"room-code\" onClick={copyRoomCodeToClipBoard}>\r\n      <div>\r\n        <img src={copyImg} alt=\"copiar codigo da sala\" />\r\n      </div>\r\n      <span>sala #{code}</span>\r\n    </button>\r\n  );\r\n}\r\n","import './questions.css';\r\nexport function Questions({\r\n  children,\r\n  content,\r\n  author,\r\n  isAnswered = false,\r\n  isHighlighted = false,\r\n}) {\r\n  return (\r\n    <div\r\n      className={`question ${isAnswered ? 'answerd' : ''} ${\r\n        isHighlighted && !isAnswered ? 'highlight' : ''\r\n      }`}\r\n    >\r\n      <p>{content}</p>\r\n      <footer>\r\n        <div className=\"user-info\">\r\n          <img src={author.avatar} alt=\"avatar do usuario\" />\r\n          <span>{author.name}</span>\r\n        </div>\r\n        <div className=\"user-buttons\">{children}</div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { database } from '../services/firebase';\r\nimport { useAuth } from './useAuth';\r\n\r\nexport function useRoom(roomid) {\r\n  let [questions, setQuestions] = React.useState([]);\r\n  const [title, setTitle] = React.useState('');\r\n  const { user } = useAuth();\r\n  React.useEffect(() => {\r\n    const roomRef = database.ref(`rooms/${roomid}`);\r\n    roomRef.on('value', (room) => {\r\n      const databaseQuestions = room.val();\r\n      const parsedQuestions = Object.entries(\r\n        databaseQuestions.questions ?? {},\r\n      ).map(([key, value]) => {\r\n        return {\r\n          id: key,\r\n          content: value.content,\r\n          author: value.author,\r\n          isHighlighted: value.isHighlighted,\r\n          isAnswered: value.isAnswered,\r\n          likeCount: Object.values(value.likes ?? {}).length,\r\n          likeId: Object.entries(value.likes ?? {}).find(\r\n            ([key, like]) => like.authorId === user?.id,\r\n          )?.[0],\r\n        };\r\n      });\r\n      setTitle(databaseQuestions.title);\r\n      setQuestions(parsedQuestions);\r\n    });\r\n    return () => {\r\n      roomRef.off('value');\r\n    };\r\n  }, [roomid, user]);\r\n  return { questions, title };\r\n}\r\n","import React from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { database } from '../services/firebase';\r\nimport { Button } from '../components/button/Button';\r\nimport { RoomCode } from '../components/RoomCode/RoomCode';\r\nimport logoImg from '../assests/images/logo.svg';\r\nimport { Questions } from '../components/Questions/Questions';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport '../styles/room.css';\r\n\r\nexport function Room() {\r\n  const { user } = useAuth();\r\n  const [newQuestion, setNewQuestion] = React.useState('');\r\n  const params = useParams();\r\n  const roomId = params.id;\r\n  const history = useHistory();\r\n  const { questions, title } = useRoom(roomId);\r\n\r\n  async function hendleSendQuestion(event) {\r\n    event.preventDefault();\r\n    if (newQuestion.trim() === '') return;\r\n    if (!user) throw new Error('Você deve estar logado para enviar perguntas');\r\n    const endeAt = await (await database.ref(`rooms/${roomId}`).get()).val();\r\n    if (endeAt.endeAt) {\r\n      window.alert('Sala encerrada');\r\n      history.push('/');\r\n      return;\r\n    }\r\n    const question = {\r\n      content: newQuestion,\r\n      author: {\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      },\r\n      isHighlighted: false,\r\n      isAnswered: false,\r\n    };\r\n    await database.ref(`rooms/${roomId}/questions`).push(question);\r\n    setNewQuestion('');\r\n  }\r\n  async function handleLikeQuestion(questionId, likeId) {\r\n    if (likeId) {\r\n      await database\r\n        .ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`)\r\n        .remove();\r\n    } else {\r\n      await database\r\n        .ref(`rooms/${roomId}/questions/${questionId}/likes`)\r\n        .push({ authorId: user.id });\r\n    }\r\n  }\r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div>\r\n          <img src={logoImg} alt=\"latmeask\" />\r\n          <RoomCode code={roomId} />\r\n        </div>\r\n      </header>\r\n      <main className=\"content\">\r\n        <div className=\"room-title\">\r\n          <h1>{title}</h1>\r\n          {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n        </div>\r\n        <form onSubmit={hendleSendQuestion}>\r\n          <textarea\r\n            placeholder=\"O que vc quer perguntar ?\"\r\n            onChange={({ target }) => setNewQuestion(target.value)}\r\n            value={newQuestion}\r\n          />\r\n          <div className=\"form-footer\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <img src={user.avatar} alt=\"avatar do ususario\" />\r\n                {user.name}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                Para enviar uma pergunta, <span>faça seu login</span>\r\n              </div>\r\n            )}\r\n            <Button type=\"submit\" disabled={!user}>\r\n              Enviar pergunta\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <div className=\"questions-list\">\r\n          {questions.map((question) => {\r\n            return (\r\n              <Questions\r\n                key={question.id}\r\n                content={question.content}\r\n                author={question.author}\r\n                isAnswered={question.isAnswered}\r\n                isHighlighted={question.isHighlighted}\r\n              >\r\n                {!question.isAnswered && (\r\n                  <button\r\n                    className={`like-button ${question.likeId ? 'liked' : ''}`}\r\n                    type=\"button\"\r\n                    aria-label=\"marcar como gostei\"\r\n                    onClick={() =>\r\n                      handleLikeQuestion(question.id, question.likeId)\r\n                    }\r\n                  >\r\n                    {question.likeCount > 0 && (\r\n                      <span>{question.likeCount}</span>\r\n                    )}\r\n                    <svg\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\"\r\n                        stroke=\"#737380\"\r\n                        strokeWidth=\"1.5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                )}\r\n              </Questions>\r\n            );\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\nimport { Button } from '../components/button/Button';\nimport { RoomCode } from '../components/RoomCode/RoomCode';\nimport logoImg from '../assests/images/logo.svg';\nimport deleteImg from '../assests/images/delete.svg';\nimport checkImg from '../assests/images/check.svg';\nimport answerImg from '../assests/images/answer.svg';\nimport { Questions } from '../components/Questions/Questions';\nimport { useRoom } from '../hooks/useRoom';\nimport '../styles/room.css';\n\nexport function AdminRoom() {\n  const history = useHistory();\n  const { user } = useAuth();\n  const params = useParams();\n  const roomId = params.id;\n  const { questions, title } = useRoom(roomId);\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Voce tem certeza qe deseja excluir essa pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n  async function handleEndRoom() {\n    const roomRef = await database.ref(`rooms/${roomId}/${user.id}`).key;\n    if (roomRef) {\n      await database.ref(`rooms/${roomId}`).update({ endeAt: new Date() });\n      history.push('/');\n    }\n  }\n  async function handleCheckQuestionAnswer(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true,\n    });\n  }\n  async function handleHighlightQuestion(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true,\n    });\n  }\n  return (\n    <div id=\"page-room\">\n      <header>\n        <div>\n          <img src={logoImg} alt=\"latmeask\" />\n          <div className=\"header-buttons\">\n            <RoomCode code={roomId} />\n            <Button outlined onClick={handleEndRoom}>\n              Emcerrar sala\n            </Button>\n          </div>\n        </div>\n      </header>\n      <main className=\"content\">\n        <div className=\"room-title\">\n          <h1>{title}</h1>\n          {questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\n        </div>\n        <div className=\"questions-list\">\n          {questions.map((question) => {\n            return (\n              <Questions\n                key={question.id}\n                content={question.content}\n                author={question.author}\n                isAnswered={question.isAnswered}\n                isHighlighted={question.isHighlighted}\n              >\n                {!question.isAnswered && (\n                  <>\n                    <button\n                      type=\"button\"\n                      aria-label=\"botao de marcar pergunta como respondida\"\n                      onClick={() => handleCheckQuestionAnswer(question.id)}\n                    >\n                      <img\n                        src={checkImg}\n                        alt=\"icone marca pergunta como respondida \"\n                      />\n                    </button>\n                    <button\n                      type=\"button\"\n                      aria-label=\"botao de dar destaque a pergunta\"\n                      onClick={() => handleHighlightQuestion(question.id)}\n                    >\n                      <img\n                        src={answerImg}\n                        alt=\"icone de dar destaque a pergunta\"\n                      />\n                    </button>\n                  </>\n                )}\n                <button\n                  type=\"button\"\n                  aria-label=\"botao de excluir pergunta\"\n                  onClick={() => handleDeleteQuestion(question.id)}\n                >\n                  <img src={deleteImg} alt=\"icone excluir pergunta\" />\n                </button>\n              </Questions>\n            );\n          })}\n        </div>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { Room } from './pages/Room';\nimport { AdminRoom } from './pages/AdminRoom';\n\nimport { AuthContextProvider } from './contexts/AuthContext';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AuthContextProvider>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/rooms/new\" component={NewRoom} />\n          <Route path=\"/rooms/:id\" component={Room} />\n          <Route path=\"/admin/rooms/:id\" component={AdminRoom} />\n        </Switch>\n      </AuthContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}